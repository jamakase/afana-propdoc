version: '3.8'

services:
  backend_app:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    volumes:
      - ./services/backend:/app
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - CELERY_BROKER_URL=redis://:${REDIS_PASSWORD}@redis:6379/0
      - CELERY_RESULT_BACKEND=redis://:${REDIS_PASSWORD}@redis:6379/0
    depends_on:
      - db
      - redis
    ports:
      - "3333:5000"

  # naive_ml_app:
  #   build:
  #     context: ./services/backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./services/backend/naive_ML_for_tests:/app
  #   environment:
  #     - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
  #   depends_on:
  #     - db
  #   command: python3 -m services.backend.naive_ML_for_tests.run
  #   ports:
  #     - "5001:5001"
  #   working_dir: /app

  # ml:
  #   build:
  #     context: ./services/ml
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./services/ml:/app
  #   depends_on:
  #     - redis
  #   command: poetry run python main.py

  # celery_worker:
  #   build:
  #     context: ./services/backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./services/backend:/app
  #   command: poetry run celery -A tasks worker --loglevel=info
  #   depends_on:
  #     - backend
  #     - redis

  # celery_beat:
  #   build:
  #     context: ./services/backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./services/backend:/app
  #   command: poetry run celery -A tasks beat --loglevel=info
  #   depends_on:
  #     - backend
  #     - redis
  # flower:
  #   build:
  #     context: ./services/backend
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./services/backend:/app
  #   command: poetry run celery -A tasks flower --port=5555
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - backend
  #     - redis
  #   environment:
  #     - CELERY_BROKER_URL=redis://redis:6379/0
  #     - CELERY_RESULT_BACKEND=redis://redis:6379/0

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    ports:
      - "5432:5432"

  redis:
    container_name: redis
    image: redis:6
    ports:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}

#  celery_worker:
#    build:
#      context: .
#      dockerfile: ./services/backend/Dockerfile
#    command: celery -A services.backend.celery_worker.celery worker --loglevel=info
#    environment:
#      - CELERY_BROKER_URL=redis://:password@redis:6379/0
#      - CELERY_RESULT_BACKEND=redis://:password@redis:6379/0
#    depends_on:
#      - redis
#



volumes:
  postgres_data:
